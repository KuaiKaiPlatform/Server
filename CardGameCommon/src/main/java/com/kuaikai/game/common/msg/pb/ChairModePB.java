// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/ChairMode.proto

package com.kuaikai.game.common.msg.pb;

public final class ChairModePB {
  private ChairModePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code common.ChairMode}
   *
   * <pre>
   * 选座模式
   * </pre>
   */
  public enum ChairMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SEQUENCE = 0;</code>
     *
     * <pre>
     * 按顺序入座（默认）
     * </pre>
     */
    SEQUENCE(0, 0),
    /**
     * <code>PLAYER = 1;</code>
     *
     * <pre>
     * 玩家选座
     * </pre>
     */
    PLAYER(1, 1),
    /**
     * <code>RANDOM = 2;</code>
     *
     * <pre>
     * 随机入座
     * </pre>
     */
    RANDOM(2, 2),
    ;

    /**
     * <code>SEQUENCE = 0;</code>
     *
     * <pre>
     * 按顺序入座（默认）
     * </pre>
     */
    public static final int SEQUENCE_VALUE = 0;
    /**
     * <code>PLAYER = 1;</code>
     *
     * <pre>
     * 玩家选座
     * </pre>
     */
    public static final int PLAYER_VALUE = 1;
    /**
     * <code>RANDOM = 2;</code>
     *
     * <pre>
     * 随机入座
     * </pre>
     */
    public static final int RANDOM_VALUE = 2;


    public final int getNumber() { return value; }

    public static ChairMode valueOf(int value) {
      switch (value) {
        case 0: return SEQUENCE;
        case 1: return PLAYER;
        case 2: return RANDOM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChairMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChairMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChairMode>() {
            public ChairMode findValueByNumber(int number) {
              return ChairMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.kuaikai.game.common.msg.pb.ChairModePB.getDescriptor().getEnumTypes().get(0);
    }

    private static final ChairMode[] VALUES = values();

    public static ChairMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChairMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:common.ChairMode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026common/ChairMode.proto\022\006common*1\n\tChai" +
      "rMode\022\014\n\010SEQUENCE\020\000\022\n\n\006PLAYER\020\001\022\n\n\006RANDO" +
      "M\020\002B-\n\036com.kuaikai.game.common.msg.pbB\013C" +
      "hairModePB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
