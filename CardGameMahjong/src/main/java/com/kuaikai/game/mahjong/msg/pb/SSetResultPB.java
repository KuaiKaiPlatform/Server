// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong/SSetResult.proto

package com.kuaikai.game.mahjong.msg.pb;

public final class SSetResultPB {
  private SSetResultPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SSetResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mahjong.PlayerSetResult playerSetResults = 1;
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult> 
        getPlayerSetResultsList();
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult getPlayerSetResults(int index);
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    int getPlayerSetResultsCount();
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder> 
        getPlayerSetResultsOrBuilderList();
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder getPlayerSetResultsOrBuilder(
        int index);

    // required int32 curSet = 2;
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    boolean hasCurSet();
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    int getCurSet();

    // required bool huang = 3;
    /**
     * <code>required bool huang = 3;</code>
     *
     * <pre>
     * 是否荒庄
     * </pre>
     */
    boolean hasHuang();
    /**
     * <code>required bool huang = 3;</code>
     *
     * <pre>
     * 是否荒庄
     * </pre>
     */
    boolean getHuang();

    // required bool over = 4;
    /**
     * <code>required bool over = 4;</code>
     *
     * <pre>
     * 是否整场结束
     * </pre>
     */
    boolean hasOver();
    /**
     * <code>required bool over = 4;</code>
     *
     * <pre>
     * 是否整场结束
     * </pre>
     */
    boolean getOver();

    // optional int64 endTime = 5;
    /**
     * <code>optional int64 endTime = 5;</code>
     *
     * <pre>
     * 本局结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional int64 endTime = 5;</code>
     *
     * <pre>
     * 本局结束时间
     * </pre>
     */
    long getEndTime();

    // optional int32 huCard = 6;
    /**
     * <code>optional int32 huCard = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    boolean hasHuCard();
    /**
     * <code>optional int32 huCard = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    int getHuCard();

    // optional int32 nextBankerId = 7;
    /**
     * <code>optional int32 nextBankerId = 7;</code>
     *
     * <pre>
     * 下一局庄家ID
     * </pre>
     */
    boolean hasNextBankerId();
    /**
     * <code>optional int32 nextBankerId = 7;</code>
     *
     * <pre>
     * 下一局庄家ID
     * </pre>
     */
    int getNextBankerId();
  }
  /**
   * Protobuf type {@code mahjong.SSetResult}
   *
   * <pre>
   * 返回牌局结果
   * </pre>
   */
  public static final class SSetResult extends
      com.google.protobuf.GeneratedMessage
      implements SSetResultOrBuilder {
    // Use SSetResult.newBuilder() to construct.
    private SSetResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSetResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSetResult defaultInstance;
    public static SSetResult getDefaultInstance() {
      return defaultInstance;
    }

    public SSetResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSetResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerSetResults_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerSetResults_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              curSet_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              huang_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              over_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              endTime_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              huCard_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              nextBankerId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerSetResults_ = java.util.Collections.unmodifiableList(playerSetResults_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kuaikai.game.mahjong.msg.pb.SSetResultPB.internal_static_mahjong_SSetResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kuaikai.game.mahjong.msg.pb.SSetResultPB.internal_static_mahjong_SSetResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.class, com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.Builder.class);
    }

    public static com.google.protobuf.Parser<SSetResult> PARSER =
        new com.google.protobuf.AbstractParser<SSetResult>() {
      public SSetResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSetResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSetResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .mahjong.PlayerSetResult playerSetResults = 1;
    public static final int PLAYERSETRESULTS_FIELD_NUMBER = 1;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult> playerSetResults_;
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult> getPlayerSetResultsList() {
      return playerSetResults_;
    }
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder> 
        getPlayerSetResultsOrBuilderList() {
      return playerSetResults_;
    }
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    public int getPlayerSetResultsCount() {
      return playerSetResults_.size();
    }
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult getPlayerSetResults(int index) {
      return playerSetResults_.get(index);
    }
    /**
     * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
     *
     * <pre>
     * 所有玩家牌局结算结果
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder getPlayerSetResultsOrBuilder(
        int index) {
      return playerSetResults_.get(index);
    }

    // required int32 curSet = 2;
    public static final int CURSET_FIELD_NUMBER = 2;
    private int curSet_;
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    public boolean hasCurSet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    public int getCurSet() {
      return curSet_;
    }

    // required bool huang = 3;
    public static final int HUANG_FIELD_NUMBER = 3;
    private boolean huang_;
    /**
     * <code>required bool huang = 3;</code>
     *
     * <pre>
     * 是否荒庄
     * </pre>
     */
    public boolean hasHuang() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool huang = 3;</code>
     *
     * <pre>
     * 是否荒庄
     * </pre>
     */
    public boolean getHuang() {
      return huang_;
    }

    // required bool over = 4;
    public static final int OVER_FIELD_NUMBER = 4;
    private boolean over_;
    /**
     * <code>required bool over = 4;</code>
     *
     * <pre>
     * 是否整场结束
     * </pre>
     */
    public boolean hasOver() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool over = 4;</code>
     *
     * <pre>
     * 是否整场结束
     * </pre>
     */
    public boolean getOver() {
      return over_;
    }

    // optional int64 endTime = 5;
    public static final int ENDTIME_FIELD_NUMBER = 5;
    private long endTime_;
    /**
     * <code>optional int64 endTime = 5;</code>
     *
     * <pre>
     * 本局结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 endTime = 5;</code>
     *
     * <pre>
     * 本局结束时间
     * </pre>
     */
    public long getEndTime() {
      return endTime_;
    }

    // optional int32 huCard = 6;
    public static final int HUCARD_FIELD_NUMBER = 6;
    private int huCard_;
    /**
     * <code>optional int32 huCard = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public boolean hasHuCard() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 huCard = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public int getHuCard() {
      return huCard_;
    }

    // optional int32 nextBankerId = 7;
    public static final int NEXTBANKERID_FIELD_NUMBER = 7;
    private int nextBankerId_;
    /**
     * <code>optional int32 nextBankerId = 7;</code>
     *
     * <pre>
     * 下一局庄家ID
     * </pre>
     */
    public boolean hasNextBankerId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 nextBankerId = 7;</code>
     *
     * <pre>
     * 下一局庄家ID
     * </pre>
     */
    public int getNextBankerId() {
      return nextBankerId_;
    }

    private void initFields() {
      playerSetResults_ = java.util.Collections.emptyList();
      curSet_ = 0;
      huang_ = false;
      over_ = false;
      endTime_ = 0L;
      huCard_ = 0;
      nextBankerId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCurSet()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHuang()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOver()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerSetResultsCount(); i++) {
        if (!getPlayerSetResults(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerSetResults_.size(); i++) {
        output.writeMessage(1, playerSetResults_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, curSet_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, huang_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, over_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, endTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, huCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, nextBankerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerSetResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerSetResults_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curSet_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, huang_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, over_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, endTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, huCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nextBankerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mahjong.SSetResult}
     *
     * <pre>
     * 返回牌局结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kuaikai.game.mahjong.msg.pb.SSetResultPB.internal_static_mahjong_SSetResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kuaikai.game.mahjong.msg.pb.SSetResultPB.internal_static_mahjong_SSetResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.class, com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.Builder.class);
      }

      // Construct using com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerSetResultsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerSetResultsBuilder_ == null) {
          playerSetResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerSetResultsBuilder_.clear();
        }
        curSet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        huang_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        over_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        huCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        nextBankerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kuaikai.game.mahjong.msg.pb.SSetResultPB.internal_static_mahjong_SSetResult_descriptor;
      }

      public com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult getDefaultInstanceForType() {
        return com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.getDefaultInstance();
      }

      public com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult build() {
        com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult buildPartial() {
        com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult result = new com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playerSetResultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerSetResults_ = java.util.Collections.unmodifiableList(playerSetResults_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerSetResults_ = playerSetResults_;
        } else {
          result.playerSetResults_ = playerSetResultsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.curSet_ = curSet_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.huang_ = huang_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.over_ = over_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huCard_ = huCard_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nextBankerId_ = nextBankerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult) {
          return mergeFrom((com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult other) {
        if (other == com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult.getDefaultInstance()) return this;
        if (playerSetResultsBuilder_ == null) {
          if (!other.playerSetResults_.isEmpty()) {
            if (playerSetResults_.isEmpty()) {
              playerSetResults_ = other.playerSetResults_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerSetResultsIsMutable();
              playerSetResults_.addAll(other.playerSetResults_);
            }
            onChanged();
          }
        } else {
          if (!other.playerSetResults_.isEmpty()) {
            if (playerSetResultsBuilder_.isEmpty()) {
              playerSetResultsBuilder_.dispose();
              playerSetResultsBuilder_ = null;
              playerSetResults_ = other.playerSetResults_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerSetResultsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerSetResultsFieldBuilder() : null;
            } else {
              playerSetResultsBuilder_.addAllMessages(other.playerSetResults_);
            }
          }
        }
        if (other.hasCurSet()) {
          setCurSet(other.getCurSet());
        }
        if (other.hasHuang()) {
          setHuang(other.getHuang());
        }
        if (other.hasOver()) {
          setOver(other.getOver());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasHuCard()) {
          setHuCard(other.getHuCard());
        }
        if (other.hasNextBankerId()) {
          setNextBankerId(other.getNextBankerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCurSet()) {
          
          return false;
        }
        if (!hasHuang()) {
          
          return false;
        }
        if (!hasOver()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerSetResultsCount(); i++) {
          if (!getPlayerSetResults(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kuaikai.game.mahjong.msg.pb.SSetResultPB.SSetResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mahjong.PlayerSetResult playerSetResults = 1;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult> playerSetResults_ =
        java.util.Collections.emptyList();
      private void ensurePlayerSetResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerSetResults_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult>(playerSetResults_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder> playerSetResultsBuilder_;

      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult> getPlayerSetResultsList() {
        if (playerSetResultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerSetResults_);
        } else {
          return playerSetResultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public int getPlayerSetResultsCount() {
        if (playerSetResultsBuilder_ == null) {
          return playerSetResults_.size();
        } else {
          return playerSetResultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult getPlayerSetResults(int index) {
        if (playerSetResultsBuilder_ == null) {
          return playerSetResults_.get(index);
        } else {
          return playerSetResultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder setPlayerSetResults(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult value) {
        if (playerSetResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.set(index, value);
          onChanged();
        } else {
          playerSetResultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder setPlayerSetResults(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder builderForValue) {
        if (playerSetResultsBuilder_ == null) {
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerSetResultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder addPlayerSetResults(com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult value) {
        if (playerSetResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.add(value);
          onChanged();
        } else {
          playerSetResultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder addPlayerSetResults(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult value) {
        if (playerSetResultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.add(index, value);
          onChanged();
        } else {
          playerSetResultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder addPlayerSetResults(
          com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder builderForValue) {
        if (playerSetResultsBuilder_ == null) {
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.add(builderForValue.build());
          onChanged();
        } else {
          playerSetResultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder addPlayerSetResults(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder builderForValue) {
        if (playerSetResultsBuilder_ == null) {
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerSetResultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder addAllPlayerSetResults(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult> values) {
        if (playerSetResultsBuilder_ == null) {
          ensurePlayerSetResultsIsMutable();
          super.addAll(values, playerSetResults_);
          onChanged();
        } else {
          playerSetResultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder clearPlayerSetResults() {
        if (playerSetResultsBuilder_ == null) {
          playerSetResults_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerSetResultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public Builder removePlayerSetResults(int index) {
        if (playerSetResultsBuilder_ == null) {
          ensurePlayerSetResultsIsMutable();
          playerSetResults_.remove(index);
          onChanged();
        } else {
          playerSetResultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder getPlayerSetResultsBuilder(
          int index) {
        return getPlayerSetResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder getPlayerSetResultsOrBuilder(
          int index) {
        if (playerSetResultsBuilder_ == null) {
          return playerSetResults_.get(index);  } else {
          return playerSetResultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder> 
           getPlayerSetResultsOrBuilderList() {
        if (playerSetResultsBuilder_ != null) {
          return playerSetResultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerSetResults_);
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder addPlayerSetResultsBuilder() {
        return getPlayerSetResultsFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder addPlayerSetResultsBuilder(
          int index) {
        return getPlayerSetResultsFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.PlayerSetResult playerSetResults = 1;</code>
       *
       * <pre>
       * 所有玩家牌局结算结果
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder> 
           getPlayerSetResultsBuilderList() {
        return getPlayerSetResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder> 
          getPlayerSetResultsFieldBuilder() {
        if (playerSetResultsBuilder_ == null) {
          playerSetResultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResult.Builder, com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.PlayerSetResultOrBuilder>(
                  playerSetResults_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerSetResults_ = null;
        }
        return playerSetResultsBuilder_;
      }

      // required int32 curSet = 2;
      private int curSet_ ;
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public boolean hasCurSet() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public int getCurSet() {
        return curSet_;
      }
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public Builder setCurSet(int value) {
        bitField0_ |= 0x00000002;
        curSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public Builder clearCurSet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curSet_ = 0;
        onChanged();
        return this;
      }

      // required bool huang = 3;
      private boolean huang_ ;
      /**
       * <code>required bool huang = 3;</code>
       *
       * <pre>
       * 是否荒庄
       * </pre>
       */
      public boolean hasHuang() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool huang = 3;</code>
       *
       * <pre>
       * 是否荒庄
       * </pre>
       */
      public boolean getHuang() {
        return huang_;
      }
      /**
       * <code>required bool huang = 3;</code>
       *
       * <pre>
       * 是否荒庄
       * </pre>
       */
      public Builder setHuang(boolean value) {
        bitField0_ |= 0x00000004;
        huang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool huang = 3;</code>
       *
       * <pre>
       * 是否荒庄
       * </pre>
       */
      public Builder clearHuang() {
        bitField0_ = (bitField0_ & ~0x00000004);
        huang_ = false;
        onChanged();
        return this;
      }

      // required bool over = 4;
      private boolean over_ ;
      /**
       * <code>required bool over = 4;</code>
       *
       * <pre>
       * 是否整场结束
       * </pre>
       */
      public boolean hasOver() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool over = 4;</code>
       *
       * <pre>
       * 是否整场结束
       * </pre>
       */
      public boolean getOver() {
        return over_;
      }
      /**
       * <code>required bool over = 4;</code>
       *
       * <pre>
       * 是否整场结束
       * </pre>
       */
      public Builder setOver(boolean value) {
        bitField0_ |= 0x00000008;
        over_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool over = 4;</code>
       *
       * <pre>
       * 是否整场结束
       * </pre>
       */
      public Builder clearOver() {
        bitField0_ = (bitField0_ & ~0x00000008);
        over_ = false;
        onChanged();
        return this;
      }

      // optional int64 endTime = 5;
      private long endTime_ ;
      /**
       * <code>optional int64 endTime = 5;</code>
       *
       * <pre>
       * 本局结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 endTime = 5;</code>
       *
       * <pre>
       * 本局结束时间
       * </pre>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional int64 endTime = 5;</code>
       *
       * <pre>
       * 本局结束时间
       * </pre>
       */
      public Builder setEndTime(long value) {
        bitField0_ |= 0x00000010;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 endTime = 5;</code>
       *
       * <pre>
       * 本局结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 huCard = 6;
      private int huCard_ ;
      /**
       * <code>optional int32 huCard = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public boolean hasHuCard() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 huCard = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public int getHuCard() {
        return huCard_;
      }
      /**
       * <code>optional int32 huCard = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder setHuCard(int value) {
        bitField0_ |= 0x00000020;
        huCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huCard = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder clearHuCard() {
        bitField0_ = (bitField0_ & ~0x00000020);
        huCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nextBankerId = 7;
      private int nextBankerId_ ;
      /**
       * <code>optional int32 nextBankerId = 7;</code>
       *
       * <pre>
       * 下一局庄家ID
       * </pre>
       */
      public boolean hasNextBankerId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 nextBankerId = 7;</code>
       *
       * <pre>
       * 下一局庄家ID
       * </pre>
       */
      public int getNextBankerId() {
        return nextBankerId_;
      }
      /**
       * <code>optional int32 nextBankerId = 7;</code>
       *
       * <pre>
       * 下一局庄家ID
       * </pre>
       */
      public Builder setNextBankerId(int value) {
        bitField0_ |= 0x00000040;
        nextBankerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextBankerId = 7;</code>
       *
       * <pre>
       * 下一局庄家ID
       * </pre>
       */
      public Builder clearNextBankerId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        nextBankerId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mahjong.SSetResult)
    }

    static {
      defaultInstance = new SSetResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mahjong.SSetResult)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mahjong_SSetResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mahjong_SSetResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030mahjong/SSetResult.proto\022\007mahjong\032\035mah" +
      "jong/PlayerSetResult.proto\"\244\001\n\nSSetResul" +
      "t\0222\n\020playerSetResults\030\001 \003(\0132\030.mahjong.Pl" +
      "ayerSetResult\022\016\n\006curSet\030\002 \002(\005\022\r\n\005huang\030\003" +
      " \002(\010\022\014\n\004over\030\004 \002(\010\022\017\n\007endTime\030\005 \001(\003\022\016\n\006h" +
      "uCard\030\006 \001(\005\022\024\n\014nextBankerId\030\007 \001(\005B/\n\037com" +
      ".kuaikai.game.mahjong.msg.pbB\014SSetResult" +
      "PB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mahjong_SSetResult_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mahjong_SSetResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mahjong_SSetResult_descriptor,
              new java.lang.String[] { "PlayerSetResults", "CurSet", "Huang", "Over", "EndTime", "HuCard", "NextBankerId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kuaikai.game.mahjong.msg.pb.PlayerSetResultPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
