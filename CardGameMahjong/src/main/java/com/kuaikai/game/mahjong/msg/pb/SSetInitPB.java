// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong/SSetInit.proto

package com.kuaikai.game.mahjong.msg.pb;

public final class SSetInitPB {
  private SSetInitPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SSetInitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mahjong.PlayerSetInfo playerSetInfos = 1;
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo> 
        getPlayerSetInfosList();
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo getPlayerSetInfos(int index);
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    int getPlayerSetInfosCount();
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder> 
        getPlayerSetInfosOrBuilderList();
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder getPlayerSetInfosOrBuilder(
        int index);

    // required int32 curSet = 2;
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    boolean hasCurSet();
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    int getCurSet();

    // required int32 remainCards = 3;
    /**
     * <code>required int32 remainCards = 3;</code>
     *
     * <pre>
     * 剩余牌数
     * </pre>
     */
    boolean hasRemainCards();
    /**
     * <code>required int32 remainCards = 3;</code>
     *
     * <pre>
     * 剩余牌数
     * </pre>
     */
    int getRemainCards();

    // required int32 bankerId = 4;
    /**
     * <code>required int32 bankerId = 4;</code>
     *
     * <pre>
     * 庄家ID
     * </pre>
     */
    boolean hasBankerId();
    /**
     * <code>required int32 bankerId = 4;</code>
     *
     * <pre>
     * 庄家ID
     * </pre>
     */
    int getBankerId();

    // required .mahjong.SetStage stage = 5;
    /**
     * <code>required .mahjong.SetStage stage = 5;</code>
     *
     * <pre>
     * 牌局阶段
     * </pre>
     */
    boolean hasStage();
    /**
     * <code>required .mahjong.SetStage stage = 5;</code>
     *
     * <pre>
     * 牌局阶段
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage getStage();

    // optional .mahjong.OperDetail lastOperDetail = 6;
    /**
     * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
     *
     * <pre>
     * 最近的操作信息
     * </pre>
     */
    boolean hasLastOperDetail();
    /**
     * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
     *
     * <pre>
     * 最近的操作信息
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getLastOperDetail();
    /**
     * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
     *
     * <pre>
     * 最近的操作信息
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getLastOperDetailOrBuilder();

    // repeated .mahjong.OperDetail canOperDetails = 7;
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> 
        getCanOperDetailsList();
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getCanOperDetails(int index);
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    int getCanOperDetailsCount();
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
        getCanOperDetailsOrBuilderList();
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getCanOperDetailsOrBuilder(
        int index);

    // repeated .mahjong.DiscardTingCards discardTingCards = 8;
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> 
        getDiscardTingCardsList();
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards getDiscardTingCards(int index);
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    int getDiscardTingCardsCount();
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
        getDiscardTingCardsOrBuilderList();
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder getDiscardTingCardsOrBuilder(
        int index);

    // optional int32 almighty = 9;
    /**
     * <code>optional int32 almighty = 9;</code>
     *
     * <pre>
     * 万能牌值
     * </pre>
     */
    boolean hasAlmighty();
    /**
     * <code>optional int32 almighty = 9;</code>
     *
     * <pre>
     * 万能牌值
     * </pre>
     */
    int getAlmighty();

    // optional int32 curDi = 10;
    /**
     * <code>optional int32 curDi = 10;</code>
     *
     * <pre>
     * 当前底数
     * </pre>
     */
    boolean hasCurDi();
    /**
     * <code>optional int32 curDi = 10;</code>
     *
     * <pre>
     * 当前底数
     * </pre>
     */
    int getCurDi();

    // optional int32 curQuan = 11;
    /**
     * <code>optional int32 curQuan = 11;</code>
     *
     * <pre>
     * 当前圈数
     * </pre>
     */
    boolean hasCurQuan();
    /**
     * <code>optional int32 curQuan = 11;</code>
     *
     * <pre>
     * 当前圈数
     * </pre>
     */
    int getCurQuan();
  }
  /**
   * Protobuf type {@code mahjong.SSetInit}
   *
   * <pre>
   * 开局或重连后返回牌局当前状态
   * </pre>
   */
  public static final class SSetInit extends
      com.google.protobuf.GeneratedMessage
      implements SSetInitOrBuilder {
    // Use SSetInit.newBuilder() to construct.
    private SSetInit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSetInit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSetInit defaultInstance;
    public static SSetInit getDefaultInstance() {
      return defaultInstance;
    }

    public SSetInit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSetInit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerSetInfos_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerSetInfos_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              curSet_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              remainCards_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              bankerId_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage value = com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                stage_ = value;
              }
              break;
            }
            case 50: {
              com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = lastOperDetail_.toBuilder();
              }
              lastOperDetail_ = input.readMessage(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastOperDetail_);
                lastOperDetail_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                canOperDetails_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail>();
                mutable_bitField0_ |= 0x00000040;
              }
              canOperDetails_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                discardTingCards_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards>();
                mutable_bitField0_ |= 0x00000080;
              }
              discardTingCards_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              almighty_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              curDi_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              curQuan_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerSetInfos_ = java.util.Collections.unmodifiableList(playerSetInfos_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          canOperDetails_ = java.util.Collections.unmodifiableList(canOperDetails_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          discardTingCards_ = java.util.Collections.unmodifiableList(discardTingCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kuaikai.game.mahjong.msg.pb.SSetInitPB.internal_static_mahjong_SSetInit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kuaikai.game.mahjong.msg.pb.SSetInitPB.internal_static_mahjong_SSetInit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.class, com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.Builder.class);
    }

    public static com.google.protobuf.Parser<SSetInit> PARSER =
        new com.google.protobuf.AbstractParser<SSetInit>() {
      public SSetInit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSetInit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSetInit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .mahjong.PlayerSetInfo playerSetInfos = 1;
    public static final int PLAYERSETINFOS_FIELD_NUMBER = 1;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo> playerSetInfos_;
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo> getPlayerSetInfosList() {
      return playerSetInfos_;
    }
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder> 
        getPlayerSetInfosOrBuilderList() {
      return playerSetInfos_;
    }
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    public int getPlayerSetInfosCount() {
      return playerSetInfos_.size();
    }
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo getPlayerSetInfos(int index) {
      return playerSetInfos_.get(index);
    }
    /**
     * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
     *
     * <pre>
     * 所有玩家牌局当前状态
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder getPlayerSetInfosOrBuilder(
        int index) {
      return playerSetInfos_.get(index);
    }

    // required int32 curSet = 2;
    public static final int CURSET_FIELD_NUMBER = 2;
    private int curSet_;
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    public boolean hasCurSet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 curSet = 2;</code>
     *
     * <pre>
     * 当前局数
     * </pre>
     */
    public int getCurSet() {
      return curSet_;
    }

    // required int32 remainCards = 3;
    public static final int REMAINCARDS_FIELD_NUMBER = 3;
    private int remainCards_;
    /**
     * <code>required int32 remainCards = 3;</code>
     *
     * <pre>
     * 剩余牌数
     * </pre>
     */
    public boolean hasRemainCards() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 remainCards = 3;</code>
     *
     * <pre>
     * 剩余牌数
     * </pre>
     */
    public int getRemainCards() {
      return remainCards_;
    }

    // required int32 bankerId = 4;
    public static final int BANKERID_FIELD_NUMBER = 4;
    private int bankerId_;
    /**
     * <code>required int32 bankerId = 4;</code>
     *
     * <pre>
     * 庄家ID
     * </pre>
     */
    public boolean hasBankerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 bankerId = 4;</code>
     *
     * <pre>
     * 庄家ID
     * </pre>
     */
    public int getBankerId() {
      return bankerId_;
    }

    // required .mahjong.SetStage stage = 5;
    public static final int STAGE_FIELD_NUMBER = 5;
    private com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage stage_;
    /**
     * <code>required .mahjong.SetStage stage = 5;</code>
     *
     * <pre>
     * 牌局阶段
     * </pre>
     */
    public boolean hasStage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .mahjong.SetStage stage = 5;</code>
     *
     * <pre>
     * 牌局阶段
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage getStage() {
      return stage_;
    }

    // optional .mahjong.OperDetail lastOperDetail = 6;
    public static final int LASTOPERDETAIL_FIELD_NUMBER = 6;
    private com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail lastOperDetail_;
    /**
     * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
     *
     * <pre>
     * 最近的操作信息
     * </pre>
     */
    public boolean hasLastOperDetail() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
     *
     * <pre>
     * 最近的操作信息
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getLastOperDetail() {
      return lastOperDetail_;
    }
    /**
     * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
     *
     * <pre>
     * 最近的操作信息
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getLastOperDetailOrBuilder() {
      return lastOperDetail_;
    }

    // repeated .mahjong.OperDetail canOperDetails = 7;
    public static final int CANOPERDETAILS_FIELD_NUMBER = 7;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> canOperDetails_;
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> getCanOperDetailsList() {
      return canOperDetails_;
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
        getCanOperDetailsOrBuilderList() {
      return canOperDetails_;
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public int getCanOperDetailsCount() {
      return canOperDetails_.size();
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getCanOperDetails(int index) {
      return canOperDetails_.get(index);
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
     *
     * <pre>
     * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getCanOperDetailsOrBuilder(
        int index) {
      return canOperDetails_.get(index);
    }

    // repeated .mahjong.DiscardTingCards discardTingCards = 8;
    public static final int DISCARDTINGCARDS_FIELD_NUMBER = 8;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> discardTingCards_;
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> getDiscardTingCardsList() {
      return discardTingCards_;
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
        getDiscardTingCardsOrBuilderList() {
      return discardTingCards_;
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public int getDiscardTingCardsCount() {
      return discardTingCards_.size();
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards getDiscardTingCards(int index) {
      return discardTingCards_.get(index);
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder getDiscardTingCardsOrBuilder(
        int index) {
      return discardTingCards_.get(index);
    }

    // optional int32 almighty = 9;
    public static final int ALMIGHTY_FIELD_NUMBER = 9;
    private int almighty_;
    /**
     * <code>optional int32 almighty = 9;</code>
     *
     * <pre>
     * 万能牌值
     * </pre>
     */
    public boolean hasAlmighty() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 almighty = 9;</code>
     *
     * <pre>
     * 万能牌值
     * </pre>
     */
    public int getAlmighty() {
      return almighty_;
    }

    // optional int32 curDi = 10;
    public static final int CURDI_FIELD_NUMBER = 10;
    private int curDi_;
    /**
     * <code>optional int32 curDi = 10;</code>
     *
     * <pre>
     * 当前底数
     * </pre>
     */
    public boolean hasCurDi() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 curDi = 10;</code>
     *
     * <pre>
     * 当前底数
     * </pre>
     */
    public int getCurDi() {
      return curDi_;
    }

    // optional int32 curQuan = 11;
    public static final int CURQUAN_FIELD_NUMBER = 11;
    private int curQuan_;
    /**
     * <code>optional int32 curQuan = 11;</code>
     *
     * <pre>
     * 当前圈数
     * </pre>
     */
    public boolean hasCurQuan() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 curQuan = 11;</code>
     *
     * <pre>
     * 当前圈数
     * </pre>
     */
    public int getCurQuan() {
      return curQuan_;
    }

    private void initFields() {
      playerSetInfos_ = java.util.Collections.emptyList();
      curSet_ = 0;
      remainCards_ = 0;
      bankerId_ = 0;
      stage_ = com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage.GAMING;
      lastOperDetail_ = com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance();
      canOperDetails_ = java.util.Collections.emptyList();
      discardTingCards_ = java.util.Collections.emptyList();
      almighty_ = 0;
      curDi_ = 0;
      curQuan_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCurSet()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRemainCards()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBankerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerSetInfosCount(); i++) {
        if (!getPlayerSetInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLastOperDetail()) {
        if (!getLastOperDetail().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCanOperDetailsCount(); i++) {
        if (!getCanOperDetails(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDiscardTingCardsCount(); i++) {
        if (!getDiscardTingCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerSetInfos_.size(); i++) {
        output.writeMessage(1, playerSetInfos_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, curSet_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, remainCards_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, bankerId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, stage_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, lastOperDetail_);
      }
      for (int i = 0; i < canOperDetails_.size(); i++) {
        output.writeMessage(7, canOperDetails_.get(i));
      }
      for (int i = 0; i < discardTingCards_.size(); i++) {
        output.writeMessage(8, discardTingCards_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, almighty_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, curDi_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, curQuan_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerSetInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerSetInfos_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curSet_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, remainCards_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, bankerId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, stage_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, lastOperDetail_);
      }
      for (int i = 0; i < canOperDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, canOperDetails_.get(i));
      }
      for (int i = 0; i < discardTingCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, discardTingCards_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, almighty_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, curDi_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, curQuan_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mahjong.SSetInit}
     *
     * <pre>
     * 开局或重连后返回牌局当前状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kuaikai.game.mahjong.msg.pb.SSetInitPB.internal_static_mahjong_SSetInit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kuaikai.game.mahjong.msg.pb.SSetInitPB.internal_static_mahjong_SSetInit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.class, com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.Builder.class);
      }

      // Construct using com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerSetInfosFieldBuilder();
          getLastOperDetailFieldBuilder();
          getCanOperDetailsFieldBuilder();
          getDiscardTingCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerSetInfosBuilder_ == null) {
          playerSetInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerSetInfosBuilder_.clear();
        }
        curSet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        remainCards_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        bankerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        stage_ = com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage.GAMING;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (lastOperDetailBuilder_ == null) {
          lastOperDetail_ = com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance();
        } else {
          lastOperDetailBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (canOperDetailsBuilder_ == null) {
          canOperDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          canOperDetailsBuilder_.clear();
        }
        if (discardTingCardsBuilder_ == null) {
          discardTingCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          discardTingCardsBuilder_.clear();
        }
        almighty_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        curDi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        curQuan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kuaikai.game.mahjong.msg.pb.SSetInitPB.internal_static_mahjong_SSetInit_descriptor;
      }

      public com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit getDefaultInstanceForType() {
        return com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.getDefaultInstance();
      }

      public com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit build() {
        com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit buildPartial() {
        com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit result = new com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playerSetInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerSetInfos_ = java.util.Collections.unmodifiableList(playerSetInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerSetInfos_ = playerSetInfos_;
        } else {
          result.playerSetInfos_ = playerSetInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.curSet_ = curSet_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.remainCards_ = remainCards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bankerId_ = bankerId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.stage_ = stage_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (lastOperDetailBuilder_ == null) {
          result.lastOperDetail_ = lastOperDetail_;
        } else {
          result.lastOperDetail_ = lastOperDetailBuilder_.build();
        }
        if (canOperDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            canOperDetails_ = java.util.Collections.unmodifiableList(canOperDetails_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.canOperDetails_ = canOperDetails_;
        } else {
          result.canOperDetails_ = canOperDetailsBuilder_.build();
        }
        if (discardTingCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            discardTingCards_ = java.util.Collections.unmodifiableList(discardTingCards_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.discardTingCards_ = discardTingCards_;
        } else {
          result.discardTingCards_ = discardTingCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.almighty_ = almighty_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.curDi_ = curDi_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.curQuan_ = curQuan_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit) {
          return mergeFrom((com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit other) {
        if (other == com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit.getDefaultInstance()) return this;
        if (playerSetInfosBuilder_ == null) {
          if (!other.playerSetInfos_.isEmpty()) {
            if (playerSetInfos_.isEmpty()) {
              playerSetInfos_ = other.playerSetInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerSetInfosIsMutable();
              playerSetInfos_.addAll(other.playerSetInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.playerSetInfos_.isEmpty()) {
            if (playerSetInfosBuilder_.isEmpty()) {
              playerSetInfosBuilder_.dispose();
              playerSetInfosBuilder_ = null;
              playerSetInfos_ = other.playerSetInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerSetInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerSetInfosFieldBuilder() : null;
            } else {
              playerSetInfosBuilder_.addAllMessages(other.playerSetInfos_);
            }
          }
        }
        if (other.hasCurSet()) {
          setCurSet(other.getCurSet());
        }
        if (other.hasRemainCards()) {
          setRemainCards(other.getRemainCards());
        }
        if (other.hasBankerId()) {
          setBankerId(other.getBankerId());
        }
        if (other.hasStage()) {
          setStage(other.getStage());
        }
        if (other.hasLastOperDetail()) {
          mergeLastOperDetail(other.getLastOperDetail());
        }
        if (canOperDetailsBuilder_ == null) {
          if (!other.canOperDetails_.isEmpty()) {
            if (canOperDetails_.isEmpty()) {
              canOperDetails_ = other.canOperDetails_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureCanOperDetailsIsMutable();
              canOperDetails_.addAll(other.canOperDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.canOperDetails_.isEmpty()) {
            if (canOperDetailsBuilder_.isEmpty()) {
              canOperDetailsBuilder_.dispose();
              canOperDetailsBuilder_ = null;
              canOperDetails_ = other.canOperDetails_;
              bitField0_ = (bitField0_ & ~0x00000040);
              canOperDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCanOperDetailsFieldBuilder() : null;
            } else {
              canOperDetailsBuilder_.addAllMessages(other.canOperDetails_);
            }
          }
        }
        if (discardTingCardsBuilder_ == null) {
          if (!other.discardTingCards_.isEmpty()) {
            if (discardTingCards_.isEmpty()) {
              discardTingCards_ = other.discardTingCards_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDiscardTingCardsIsMutable();
              discardTingCards_.addAll(other.discardTingCards_);
            }
            onChanged();
          }
        } else {
          if (!other.discardTingCards_.isEmpty()) {
            if (discardTingCardsBuilder_.isEmpty()) {
              discardTingCardsBuilder_.dispose();
              discardTingCardsBuilder_ = null;
              discardTingCards_ = other.discardTingCards_;
              bitField0_ = (bitField0_ & ~0x00000080);
              discardTingCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDiscardTingCardsFieldBuilder() : null;
            } else {
              discardTingCardsBuilder_.addAllMessages(other.discardTingCards_);
            }
          }
        }
        if (other.hasAlmighty()) {
          setAlmighty(other.getAlmighty());
        }
        if (other.hasCurDi()) {
          setCurDi(other.getCurDi());
        }
        if (other.hasCurQuan()) {
          setCurQuan(other.getCurQuan());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCurSet()) {
          
          return false;
        }
        if (!hasRemainCards()) {
          
          return false;
        }
        if (!hasBankerId()) {
          
          return false;
        }
        if (!hasStage()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerSetInfosCount(); i++) {
          if (!getPlayerSetInfos(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasLastOperDetail()) {
          if (!getLastOperDetail().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCanOperDetailsCount(); i++) {
          if (!getCanOperDetails(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDiscardTingCardsCount(); i++) {
          if (!getDiscardTingCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kuaikai.game.mahjong.msg.pb.SSetInitPB.SSetInit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mahjong.PlayerSetInfo playerSetInfos = 1;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo> playerSetInfos_ =
        java.util.Collections.emptyList();
      private void ensurePlayerSetInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerSetInfos_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo>(playerSetInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder> playerSetInfosBuilder_;

      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo> getPlayerSetInfosList() {
        if (playerSetInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerSetInfos_);
        } else {
          return playerSetInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public int getPlayerSetInfosCount() {
        if (playerSetInfosBuilder_ == null) {
          return playerSetInfos_.size();
        } else {
          return playerSetInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo getPlayerSetInfos(int index) {
        if (playerSetInfosBuilder_ == null) {
          return playerSetInfos_.get(index);
        } else {
          return playerSetInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder setPlayerSetInfos(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo value) {
        if (playerSetInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.set(index, value);
          onChanged();
        } else {
          playerSetInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder setPlayerSetInfos(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder builderForValue) {
        if (playerSetInfosBuilder_ == null) {
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerSetInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder addPlayerSetInfos(com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo value) {
        if (playerSetInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.add(value);
          onChanged();
        } else {
          playerSetInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder addPlayerSetInfos(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo value) {
        if (playerSetInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.add(index, value);
          onChanged();
        } else {
          playerSetInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder addPlayerSetInfos(
          com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder builderForValue) {
        if (playerSetInfosBuilder_ == null) {
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.add(builderForValue.build());
          onChanged();
        } else {
          playerSetInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder addPlayerSetInfos(
          int index, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder builderForValue) {
        if (playerSetInfosBuilder_ == null) {
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerSetInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder addAllPlayerSetInfos(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo> values) {
        if (playerSetInfosBuilder_ == null) {
          ensurePlayerSetInfosIsMutable();
          super.addAll(values, playerSetInfos_);
          onChanged();
        } else {
          playerSetInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder clearPlayerSetInfos() {
        if (playerSetInfosBuilder_ == null) {
          playerSetInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerSetInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public Builder removePlayerSetInfos(int index) {
        if (playerSetInfosBuilder_ == null) {
          ensurePlayerSetInfosIsMutable();
          playerSetInfos_.remove(index);
          onChanged();
        } else {
          playerSetInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder getPlayerSetInfosBuilder(
          int index) {
        return getPlayerSetInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder getPlayerSetInfosOrBuilder(
          int index) {
        if (playerSetInfosBuilder_ == null) {
          return playerSetInfos_.get(index);  } else {
          return playerSetInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder> 
           getPlayerSetInfosOrBuilderList() {
        if (playerSetInfosBuilder_ != null) {
          return playerSetInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerSetInfos_);
        }
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder addPlayerSetInfosBuilder() {
        return getPlayerSetInfosFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder addPlayerSetInfosBuilder(
          int index) {
        return getPlayerSetInfosFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.PlayerSetInfo playerSetInfos = 1;</code>
       *
       * <pre>
       * 所有玩家牌局当前状态
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder> 
           getPlayerSetInfosBuilderList() {
        return getPlayerSetInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder> 
          getPlayerSetInfosFieldBuilder() {
        if (playerSetInfosBuilder_ == null) {
          playerSetInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfo.Builder, com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.PlayerSetInfoOrBuilder>(
                  playerSetInfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerSetInfos_ = null;
        }
        return playerSetInfosBuilder_;
      }

      // required int32 curSet = 2;
      private int curSet_ ;
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public boolean hasCurSet() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public int getCurSet() {
        return curSet_;
      }
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public Builder setCurSet(int value) {
        bitField0_ |= 0x00000002;
        curSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 curSet = 2;</code>
       *
       * <pre>
       * 当前局数
       * </pre>
       */
      public Builder clearCurSet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curSet_ = 0;
        onChanged();
        return this;
      }

      // required int32 remainCards = 3;
      private int remainCards_ ;
      /**
       * <code>required int32 remainCards = 3;</code>
       *
       * <pre>
       * 剩余牌数
       * </pre>
       */
      public boolean hasRemainCards() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 remainCards = 3;</code>
       *
       * <pre>
       * 剩余牌数
       * </pre>
       */
      public int getRemainCards() {
        return remainCards_;
      }
      /**
       * <code>required int32 remainCards = 3;</code>
       *
       * <pre>
       * 剩余牌数
       * </pre>
       */
      public Builder setRemainCards(int value) {
        bitField0_ |= 0x00000004;
        remainCards_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 remainCards = 3;</code>
       *
       * <pre>
       * 剩余牌数
       * </pre>
       */
      public Builder clearRemainCards() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remainCards_ = 0;
        onChanged();
        return this;
      }

      // required int32 bankerId = 4;
      private int bankerId_ ;
      /**
       * <code>required int32 bankerId = 4;</code>
       *
       * <pre>
       * 庄家ID
       * </pre>
       */
      public boolean hasBankerId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 bankerId = 4;</code>
       *
       * <pre>
       * 庄家ID
       * </pre>
       */
      public int getBankerId() {
        return bankerId_;
      }
      /**
       * <code>required int32 bankerId = 4;</code>
       *
       * <pre>
       * 庄家ID
       * </pre>
       */
      public Builder setBankerId(int value) {
        bitField0_ |= 0x00000008;
        bankerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 bankerId = 4;</code>
       *
       * <pre>
       * 庄家ID
       * </pre>
       */
      public Builder clearBankerId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bankerId_ = 0;
        onChanged();
        return this;
      }

      // required .mahjong.SetStage stage = 5;
      private com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage stage_ = com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage.GAMING;
      /**
       * <code>required .mahjong.SetStage stage = 5;</code>
       *
       * <pre>
       * 牌局阶段
       * </pre>
       */
      public boolean hasStage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .mahjong.SetStage stage = 5;</code>
       *
       * <pre>
       * 牌局阶段
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage getStage() {
        return stage_;
      }
      /**
       * <code>required .mahjong.SetStage stage = 5;</code>
       *
       * <pre>
       * 牌局阶段
       * </pre>
       */
      public Builder setStage(com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        stage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .mahjong.SetStage stage = 5;</code>
       *
       * <pre>
       * 牌局阶段
       * </pre>
       */
      public Builder clearStage() {
        bitField0_ = (bitField0_ & ~0x00000010);
        stage_ = com.kuaikai.game.mahjong.msg.pb.SetStagePB.SetStage.GAMING;
        onChanged();
        return this;
      }

      // optional .mahjong.OperDetail lastOperDetail = 6;
      private com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail lastOperDetail_ = com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> lastOperDetailBuilder_;
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public boolean hasLastOperDetail() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getLastOperDetail() {
        if (lastOperDetailBuilder_ == null) {
          return lastOperDetail_;
        } else {
          return lastOperDetailBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public Builder setLastOperDetail(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (lastOperDetailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastOperDetail_ = value;
          onChanged();
        } else {
          lastOperDetailBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public Builder setLastOperDetail(
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (lastOperDetailBuilder_ == null) {
          lastOperDetail_ = builderForValue.build();
          onChanged();
        } else {
          lastOperDetailBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public Builder mergeLastOperDetail(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (lastOperDetailBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              lastOperDetail_ != com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance()) {
            lastOperDetail_ =
              com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.newBuilder(lastOperDetail_).mergeFrom(value).buildPartial();
          } else {
            lastOperDetail_ = value;
          }
          onChanged();
        } else {
          lastOperDetailBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public Builder clearLastOperDetail() {
        if (lastOperDetailBuilder_ == null) {
          lastOperDetail_ = com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance();
          onChanged();
        } else {
          lastOperDetailBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder getLastOperDetailBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLastOperDetailFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getLastOperDetailOrBuilder() {
        if (lastOperDetailBuilder_ != null) {
          return lastOperDetailBuilder_.getMessageOrBuilder();
        } else {
          return lastOperDetail_;
        }
      }
      /**
       * <code>optional .mahjong.OperDetail lastOperDetail = 6;</code>
       *
       * <pre>
       * 最近的操作信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
          getLastOperDetailFieldBuilder() {
        if (lastOperDetailBuilder_ == null) {
          lastOperDetailBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder>(
                  lastOperDetail_,
                  getParentForChildren(),
                  isClean());
          lastOperDetail_ = null;
        }
        return lastOperDetailBuilder_;
      }

      // repeated .mahjong.OperDetail canOperDetails = 7;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> canOperDetails_ =
        java.util.Collections.emptyList();
      private void ensureCanOperDetailsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          canOperDetails_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail>(canOperDetails_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> canOperDetailsBuilder_;

      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> getCanOperDetailsList() {
        if (canOperDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(canOperDetails_);
        } else {
          return canOperDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public int getCanOperDetailsCount() {
        if (canOperDetailsBuilder_ == null) {
          return canOperDetails_.size();
        } else {
          return canOperDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getCanOperDetails(int index) {
        if (canOperDetailsBuilder_ == null) {
          return canOperDetails_.get(index);
        } else {
          return canOperDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder setCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (canOperDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCanOperDetailsIsMutable();
          canOperDetails_.set(index, value);
          onChanged();
        } else {
          canOperDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder setCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          canOperDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (canOperDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(value);
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (canOperDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(index, value);
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(builderForValue.build());
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addAllCanOperDetails(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> values) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          super.addAll(values, canOperDetails_);
          onChanged();
        } else {
          canOperDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder clearCanOperDetails() {
        if (canOperDetailsBuilder_ == null) {
          canOperDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          canOperDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder removeCanOperDetails(int index) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.remove(index);
          onChanged();
        } else {
          canOperDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder getCanOperDetailsBuilder(
          int index) {
        return getCanOperDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getCanOperDetailsOrBuilder(
          int index) {
        if (canOperDetailsBuilder_ == null) {
          return canOperDetails_.get(index);  } else {
          return canOperDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
           getCanOperDetailsOrBuilderList() {
        if (canOperDetailsBuilder_ != null) {
          return canOperDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(canOperDetails_);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder addCanOperDetailsBuilder() {
        return getCanOperDetailsFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder addCanOperDetailsBuilder(
          int index) {
        return getCanOperDetailsFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 7;</code>
       *
       * <pre>
       * 本人可做的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder> 
           getCanOperDetailsBuilderList() {
        return getCanOperDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
          getCanOperDetailsFieldBuilder() {
        if (canOperDetailsBuilder_ == null) {
          canOperDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder>(
                  canOperDetails_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          canOperDetails_ = null;
        }
        return canOperDetailsBuilder_;
      }

      // repeated .mahjong.DiscardTingCards discardTingCards = 8;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> discardTingCards_ =
        java.util.Collections.emptyList();
      private void ensureDiscardTingCardsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          discardTingCards_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards>(discardTingCards_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> discardTingCardsBuilder_;

      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> getDiscardTingCardsList() {
        if (discardTingCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(discardTingCards_);
        } else {
          return discardTingCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public int getDiscardTingCardsCount() {
        if (discardTingCardsBuilder_ == null) {
          return discardTingCards_.size();
        } else {
          return discardTingCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards getDiscardTingCards(int index) {
        if (discardTingCardsBuilder_ == null) {
          return discardTingCards_.get(index);
        } else {
          return discardTingCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder setDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards value) {
        if (discardTingCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.set(index, value);
          onChanged();
        } else {
          discardTingCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder setDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder builderForValue) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          discardTingCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards value) {
        if (discardTingCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(value);
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards value) {
        if (discardTingCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(index, value);
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder builderForValue) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(builderForValue.build());
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder builderForValue) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addAllDiscardTingCards(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> values) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          super.addAll(values, discardTingCards_);
          onChanged();
        } else {
          discardTingCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder clearDiscardTingCards() {
        if (discardTingCardsBuilder_ == null) {
          discardTingCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          discardTingCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder removeDiscardTingCards(int index) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.remove(index);
          onChanged();
        } else {
          discardTingCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder getDiscardTingCardsBuilder(
          int index) {
        return getDiscardTingCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder getDiscardTingCardsOrBuilder(
          int index) {
        if (discardTingCardsBuilder_ == null) {
          return discardTingCards_.get(index);  } else {
          return discardTingCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
           getDiscardTingCardsOrBuilderList() {
        if (discardTingCardsBuilder_ != null) {
          return discardTingCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(discardTingCards_);
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder addDiscardTingCardsBuilder() {
        return getDiscardTingCardsFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder addDiscardTingCardsBuilder(
          int index) {
        return getDiscardTingCardsFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 8;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder> 
           getDiscardTingCardsBuilderList() {
        return getDiscardTingCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
          getDiscardTingCardsFieldBuilder() {
        if (discardTingCardsBuilder_ == null) {
          discardTingCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder>(
                  discardTingCards_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          discardTingCards_ = null;
        }
        return discardTingCardsBuilder_;
      }

      // optional int32 almighty = 9;
      private int almighty_ ;
      /**
       * <code>optional int32 almighty = 9;</code>
       *
       * <pre>
       * 万能牌值
       * </pre>
       */
      public boolean hasAlmighty() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 almighty = 9;</code>
       *
       * <pre>
       * 万能牌值
       * </pre>
       */
      public int getAlmighty() {
        return almighty_;
      }
      /**
       * <code>optional int32 almighty = 9;</code>
       *
       * <pre>
       * 万能牌值
       * </pre>
       */
      public Builder setAlmighty(int value) {
        bitField0_ |= 0x00000100;
        almighty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 almighty = 9;</code>
       *
       * <pre>
       * 万能牌值
       * </pre>
       */
      public Builder clearAlmighty() {
        bitField0_ = (bitField0_ & ~0x00000100);
        almighty_ = 0;
        onChanged();
        return this;
      }

      // optional int32 curDi = 10;
      private int curDi_ ;
      /**
       * <code>optional int32 curDi = 10;</code>
       *
       * <pre>
       * 当前底数
       * </pre>
       */
      public boolean hasCurDi() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 curDi = 10;</code>
       *
       * <pre>
       * 当前底数
       * </pre>
       */
      public int getCurDi() {
        return curDi_;
      }
      /**
       * <code>optional int32 curDi = 10;</code>
       *
       * <pre>
       * 当前底数
       * </pre>
       */
      public Builder setCurDi(int value) {
        bitField0_ |= 0x00000200;
        curDi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 curDi = 10;</code>
       *
       * <pre>
       * 当前底数
       * </pre>
       */
      public Builder clearCurDi() {
        bitField0_ = (bitField0_ & ~0x00000200);
        curDi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 curQuan = 11;
      private int curQuan_ ;
      /**
       * <code>optional int32 curQuan = 11;</code>
       *
       * <pre>
       * 当前圈数
       * </pre>
       */
      public boolean hasCurQuan() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 curQuan = 11;</code>
       *
       * <pre>
       * 当前圈数
       * </pre>
       */
      public int getCurQuan() {
        return curQuan_;
      }
      /**
       * <code>optional int32 curQuan = 11;</code>
       *
       * <pre>
       * 当前圈数
       * </pre>
       */
      public Builder setCurQuan(int value) {
        bitField0_ |= 0x00000400;
        curQuan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 curQuan = 11;</code>
       *
       * <pre>
       * 当前圈数
       * </pre>
       */
      public Builder clearCurQuan() {
        bitField0_ = (bitField0_ & ~0x00000400);
        curQuan_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mahjong.SSetInit)
    }

    static {
      defaultInstance = new SSetInit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mahjong.SSetInit)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mahjong_SSetInit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mahjong_SSetInit_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026mahjong/SSetInit.proto\022\007mahjong\032\033mahjo" +
      "ng/PlayerSetInfo.proto\032\026mahjong/SetStage" +
      ".proto\032\030mahjong/OperDetail.proto\032\036mahjon" +
      "g/DiscardTingCards.proto\"\324\002\n\010SSetInit\022.\n" +
      "\016playerSetInfos\030\001 \003(\0132\026.mahjong.PlayerSe" +
      "tInfo\022\016\n\006curSet\030\002 \002(\005\022\023\n\013remainCards\030\003 \002" +
      "(\005\022\020\n\010bankerId\030\004 \002(\005\022 \n\005stage\030\005 \002(\0162\021.ma" +
      "hjong.SetStage\022+\n\016lastOperDetail\030\006 \001(\0132\023" +
      ".mahjong.OperDetail\022+\n\016canOperDetails\030\007 " +
      "\003(\0132\023.mahjong.OperDetail\0223\n\020discardTingC",
      "ards\030\010 \003(\0132\031.mahjong.DiscardTingCards\022\020\n" +
      "\010almighty\030\t \001(\005\022\r\n\005curDi\030\n \001(\005\022\017\n\007curQua" +
      "n\030\013 \001(\005B-\n\037com.kuaikai.game.mahjong.msg." +
      "pbB\nSSetInitPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mahjong_SSetInit_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mahjong_SSetInit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mahjong_SSetInit_descriptor,
              new java.lang.String[] { "PlayerSetInfos", "CurSet", "RemainCards", "BankerId", "Stage", "LastOperDetail", "CanOperDetails", "DiscardTingCards", "Almighty", "CurDi", "CurQuan", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kuaikai.game.mahjong.msg.pb.PlayerSetInfoPB.getDescriptor(),
          com.kuaikai.game.mahjong.msg.pb.SetStagePB.getDescriptor(),
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.getDescriptor(),
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
