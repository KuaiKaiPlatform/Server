// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong/SOperCard.proto

package com.kuaikai.game.mahjong.msg.pb;

public final class SOperCardPB {
  private SOperCardPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SOperCardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mahjong.OperDetail operDetails = 1;
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> 
        getOperDetailsList();
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getOperDetails(int index);
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    int getOperDetailsCount();
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
        getOperDetailsOrBuilderList();
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getOperDetailsOrBuilder(
        int index);

    // repeated .mahjong.OperDetail canOperDetails = 2;
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> 
        getCanOperDetailsList();
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getCanOperDetails(int index);
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    int getCanOperDetailsCount();
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
        getCanOperDetailsOrBuilderList();
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getCanOperDetailsOrBuilder(
        int index);

    // repeated .mahjong.DiscardTingCards discardTingCards = 3;
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> 
        getDiscardTingCardsList();
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards getDiscardTingCards(int index);
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    int getDiscardTingCardsCount();
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
        getDiscardTingCardsOrBuilderList();
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder getDiscardTingCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mahjong.SOperCard}
   *
   * <pre>
   * 返回玩家操作
   * </pre>
   */
  public static final class SOperCard extends
      com.google.protobuf.GeneratedMessage
      implements SOperCardOrBuilder {
    // Use SOperCard.newBuilder() to construct.
    private SOperCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SOperCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SOperCard defaultInstance;
    public static SOperCard getDefaultInstance() {
      return defaultInstance;
    }

    public SOperCard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SOperCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                operDetails_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail>();
                mutable_bitField0_ |= 0x00000001;
              }
              operDetails_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                canOperDetails_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail>();
                mutable_bitField0_ |= 0x00000002;
              }
              canOperDetails_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                discardTingCards_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards>();
                mutable_bitField0_ |= 0x00000004;
              }
              discardTingCards_.add(input.readMessage(com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          operDetails_ = java.util.Collections.unmodifiableList(operDetails_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          canOperDetails_ = java.util.Collections.unmodifiableList(canOperDetails_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          discardTingCards_ = java.util.Collections.unmodifiableList(discardTingCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kuaikai.game.mahjong.msg.pb.SOperCardPB.internal_static_mahjong_SOperCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kuaikai.game.mahjong.msg.pb.SOperCardPB.internal_static_mahjong_SOperCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.class, com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.Builder.class);
    }

    public static com.google.protobuf.Parser<SOperCard> PARSER =
        new com.google.protobuf.AbstractParser<SOperCard>() {
      public SOperCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SOperCard(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SOperCard> getParserForType() {
      return PARSER;
    }

    // repeated .mahjong.OperDetail operDetails = 1;
    public static final int OPERDETAILS_FIELD_NUMBER = 1;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> operDetails_;
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> getOperDetailsList() {
      return operDetails_;
    }
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
        getOperDetailsOrBuilderList() {
      return operDetails_;
    }
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    public int getOperDetailsCount() {
      return operDetails_.size();
    }
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getOperDetails(int index) {
      return operDetails_.get(index);
    }
    /**
     * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
     *
     * <pre>
     * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getOperDetailsOrBuilder(
        int index) {
      return operDetails_.get(index);
    }

    // repeated .mahjong.OperDetail canOperDetails = 2;
    public static final int CANOPERDETAILS_FIELD_NUMBER = 2;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> canOperDetails_;
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> getCanOperDetailsList() {
      return canOperDetails_;
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
        getCanOperDetailsOrBuilderList() {
      return canOperDetails_;
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public int getCanOperDetailsCount() {
      return canOperDetails_.size();
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getCanOperDetails(int index) {
      return canOperDetails_.get(index);
    }
    /**
     * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
     *
     * <pre>
     * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getCanOperDetailsOrBuilder(
        int index) {
      return canOperDetails_.get(index);
    }

    // repeated .mahjong.DiscardTingCards discardTingCards = 3;
    public static final int DISCARDTINGCARDS_FIELD_NUMBER = 3;
    private java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> discardTingCards_;
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> getDiscardTingCardsList() {
      return discardTingCards_;
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
        getDiscardTingCardsOrBuilderList() {
      return discardTingCards_;
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public int getDiscardTingCardsCount() {
      return discardTingCards_.size();
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards getDiscardTingCards(int index) {
      return discardTingCards_.get(index);
    }
    /**
     * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
     *
     * <pre>
     * 本人打牌后的听牌列表
     * </pre>
     */
    public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder getDiscardTingCardsOrBuilder(
        int index) {
      return discardTingCards_.get(index);
    }

    private void initFields() {
      operDetails_ = java.util.Collections.emptyList();
      canOperDetails_ = java.util.Collections.emptyList();
      discardTingCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getOperDetailsCount(); i++) {
        if (!getOperDetails(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCanOperDetailsCount(); i++) {
        if (!getCanOperDetails(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDiscardTingCardsCount(); i++) {
        if (!getDiscardTingCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < operDetails_.size(); i++) {
        output.writeMessage(1, operDetails_.get(i));
      }
      for (int i = 0; i < canOperDetails_.size(); i++) {
        output.writeMessage(2, canOperDetails_.get(i));
      }
      for (int i = 0; i < discardTingCards_.size(); i++) {
        output.writeMessage(3, discardTingCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < operDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, operDetails_.get(i));
      }
      for (int i = 0; i < canOperDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, canOperDetails_.get(i));
      }
      for (int i = 0; i < discardTingCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, discardTingCards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mahjong.SOperCard}
     *
     * <pre>
     * 返回玩家操作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kuaikai.game.mahjong.msg.pb.SOperCardPB.internal_static_mahjong_SOperCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kuaikai.game.mahjong.msg.pb.SOperCardPB.internal_static_mahjong_SOperCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.class, com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.Builder.class);
      }

      // Construct using com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOperDetailsFieldBuilder();
          getCanOperDetailsFieldBuilder();
          getDiscardTingCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (operDetailsBuilder_ == null) {
          operDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          operDetailsBuilder_.clear();
        }
        if (canOperDetailsBuilder_ == null) {
          canOperDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          canOperDetailsBuilder_.clear();
        }
        if (discardTingCardsBuilder_ == null) {
          discardTingCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          discardTingCardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kuaikai.game.mahjong.msg.pb.SOperCardPB.internal_static_mahjong_SOperCard_descriptor;
      }

      public com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard getDefaultInstanceForType() {
        return com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.getDefaultInstance();
      }

      public com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard build() {
        com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard buildPartial() {
        com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard result = new com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard(this);
        int from_bitField0_ = bitField0_;
        if (operDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            operDetails_ = java.util.Collections.unmodifiableList(operDetails_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.operDetails_ = operDetails_;
        } else {
          result.operDetails_ = operDetailsBuilder_.build();
        }
        if (canOperDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            canOperDetails_ = java.util.Collections.unmodifiableList(canOperDetails_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.canOperDetails_ = canOperDetails_;
        } else {
          result.canOperDetails_ = canOperDetailsBuilder_.build();
        }
        if (discardTingCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            discardTingCards_ = java.util.Collections.unmodifiableList(discardTingCards_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.discardTingCards_ = discardTingCards_;
        } else {
          result.discardTingCards_ = discardTingCardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard) {
          return mergeFrom((com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard other) {
        if (other == com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard.getDefaultInstance()) return this;
        if (operDetailsBuilder_ == null) {
          if (!other.operDetails_.isEmpty()) {
            if (operDetails_.isEmpty()) {
              operDetails_ = other.operDetails_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOperDetailsIsMutable();
              operDetails_.addAll(other.operDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.operDetails_.isEmpty()) {
            if (operDetailsBuilder_.isEmpty()) {
              operDetailsBuilder_.dispose();
              operDetailsBuilder_ = null;
              operDetails_ = other.operDetails_;
              bitField0_ = (bitField0_ & ~0x00000001);
              operDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOperDetailsFieldBuilder() : null;
            } else {
              operDetailsBuilder_.addAllMessages(other.operDetails_);
            }
          }
        }
        if (canOperDetailsBuilder_ == null) {
          if (!other.canOperDetails_.isEmpty()) {
            if (canOperDetails_.isEmpty()) {
              canOperDetails_ = other.canOperDetails_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCanOperDetailsIsMutable();
              canOperDetails_.addAll(other.canOperDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.canOperDetails_.isEmpty()) {
            if (canOperDetailsBuilder_.isEmpty()) {
              canOperDetailsBuilder_.dispose();
              canOperDetailsBuilder_ = null;
              canOperDetails_ = other.canOperDetails_;
              bitField0_ = (bitField0_ & ~0x00000002);
              canOperDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCanOperDetailsFieldBuilder() : null;
            } else {
              canOperDetailsBuilder_.addAllMessages(other.canOperDetails_);
            }
          }
        }
        if (discardTingCardsBuilder_ == null) {
          if (!other.discardTingCards_.isEmpty()) {
            if (discardTingCards_.isEmpty()) {
              discardTingCards_ = other.discardTingCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDiscardTingCardsIsMutable();
              discardTingCards_.addAll(other.discardTingCards_);
            }
            onChanged();
          }
        } else {
          if (!other.discardTingCards_.isEmpty()) {
            if (discardTingCardsBuilder_.isEmpty()) {
              discardTingCardsBuilder_.dispose();
              discardTingCardsBuilder_ = null;
              discardTingCards_ = other.discardTingCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
              discardTingCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDiscardTingCardsFieldBuilder() : null;
            } else {
              discardTingCardsBuilder_.addAllMessages(other.discardTingCards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getOperDetailsCount(); i++) {
          if (!getOperDetails(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCanOperDetailsCount(); i++) {
          if (!getCanOperDetails(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDiscardTingCardsCount(); i++) {
          if (!getDiscardTingCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kuaikai.game.mahjong.msg.pb.SOperCardPB.SOperCard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mahjong.OperDetail operDetails = 1;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> operDetails_ =
        java.util.Collections.emptyList();
      private void ensureOperDetailsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          operDetails_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail>(operDetails_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> operDetailsBuilder_;

      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> getOperDetailsList() {
        if (operDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operDetails_);
        } else {
          return operDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public int getOperDetailsCount() {
        if (operDetailsBuilder_ == null) {
          return operDetails_.size();
        } else {
          return operDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getOperDetails(int index) {
        if (operDetailsBuilder_ == null) {
          return operDetails_.get(index);
        } else {
          return operDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder setOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (operDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperDetailsIsMutable();
          operDetails_.set(index, value);
          onChanged();
        } else {
          operDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder setOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (operDetailsBuilder_ == null) {
          ensureOperDetailsIsMutable();
          operDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          operDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder addOperDetails(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (operDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperDetailsIsMutable();
          operDetails_.add(value);
          onChanged();
        } else {
          operDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder addOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (operDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperDetailsIsMutable();
          operDetails_.add(index, value);
          onChanged();
        } else {
          operDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder addOperDetails(
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (operDetailsBuilder_ == null) {
          ensureOperDetailsIsMutable();
          operDetails_.add(builderForValue.build());
          onChanged();
        } else {
          operDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder addOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (operDetailsBuilder_ == null) {
          ensureOperDetailsIsMutable();
          operDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          operDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder addAllOperDetails(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> values) {
        if (operDetailsBuilder_ == null) {
          ensureOperDetailsIsMutable();
          super.addAll(values, operDetails_);
          onChanged();
        } else {
          operDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder clearOperDetails() {
        if (operDetailsBuilder_ == null) {
          operDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          operDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public Builder removeOperDetails(int index) {
        if (operDetailsBuilder_ == null) {
          ensureOperDetailsIsMutable();
          operDetails_.remove(index);
          onChanged();
        } else {
          operDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder getOperDetailsBuilder(
          int index) {
        return getOperDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getOperDetailsOrBuilder(
          int index) {
        if (operDetailsBuilder_ == null) {
          return operDetails_.get(index);  } else {
          return operDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
           getOperDetailsOrBuilderList() {
        if (operDetailsBuilder_ != null) {
          return operDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operDetails_);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder addOperDetailsBuilder() {
        return getOperDetailsFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder addOperDetailsBuilder(
          int index) {
        return getOperDetailsFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.OperDetail operDetails = 1;</code>
       *
       * <pre>
       * 操作列表，可以有多个顺序操作，如：先打后摸，先杠后摸等。所有人都收到
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder> 
           getOperDetailsBuilderList() {
        return getOperDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
          getOperDetailsFieldBuilder() {
        if (operDetailsBuilder_ == null) {
          operDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder>(
                  operDetails_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          operDetails_ = null;
        }
        return operDetailsBuilder_;
      }

      // repeated .mahjong.OperDetail canOperDetails = 2;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> canOperDetails_ =
        java.util.Collections.emptyList();
      private void ensureCanOperDetailsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          canOperDetails_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail>(canOperDetails_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> canOperDetailsBuilder_;

      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> getCanOperDetailsList() {
        if (canOperDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(canOperDetails_);
        } else {
          return canOperDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public int getCanOperDetailsCount() {
        if (canOperDetailsBuilder_ == null) {
          return canOperDetails_.size();
        } else {
          return canOperDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail getCanOperDetails(int index) {
        if (canOperDetailsBuilder_ == null) {
          return canOperDetails_.get(index);
        } else {
          return canOperDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder setCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (canOperDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCanOperDetailsIsMutable();
          canOperDetails_.set(index, value);
          onChanged();
        } else {
          canOperDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder setCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          canOperDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (canOperDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(value);
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail value) {
        if (canOperDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(index, value);
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(builderForValue.build());
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addCanOperDetails(
          int index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder builderForValue) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          canOperDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder addAllCanOperDetails(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail> values) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          super.addAll(values, canOperDetails_);
          onChanged();
        } else {
          canOperDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder clearCanOperDetails() {
        if (canOperDetailsBuilder_ == null) {
          canOperDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          canOperDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public Builder removeCanOperDetails(int index) {
        if (canOperDetailsBuilder_ == null) {
          ensureCanOperDetailsIsMutable();
          canOperDetails_.remove(index);
          onChanged();
        } else {
          canOperDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder getCanOperDetailsBuilder(
          int index) {
        return getCanOperDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder getCanOperDetailsOrBuilder(
          int index) {
        if (canOperDetailsBuilder_ == null) {
          return canOperDetails_.get(index);  } else {
          return canOperDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
           getCanOperDetailsOrBuilderList() {
        if (canOperDetailsBuilder_ != null) {
          return canOperDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(canOperDetails_);
        }
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder addCanOperDetailsBuilder() {
        return getCanOperDetailsFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder addCanOperDetailsBuilder(
          int index) {
        return getCanOperDetailsFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.OperDetail canOperDetails = 2;</code>
       *
       * <pre>
       * 本人可执行的操作（可胡、可听、可杠、可碰、可吃和可打等）
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder> 
           getCanOperDetailsBuilderList() {
        return getCanOperDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder> 
          getCanOperDetailsFieldBuilder() {
        if (canOperDetailsBuilder_ == null) {
          canOperDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetail.Builder, com.kuaikai.game.mahjong.msg.pb.OperDetailPB.OperDetailOrBuilder>(
                  canOperDetails_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          canOperDetails_ = null;
        }
        return canOperDetailsBuilder_;
      }

      // repeated .mahjong.DiscardTingCards discardTingCards = 3;
      private java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> discardTingCards_ =
        java.util.Collections.emptyList();
      private void ensureDiscardTingCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          discardTingCards_ = new java.util.ArrayList<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards>(discardTingCards_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> discardTingCardsBuilder_;

      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> getDiscardTingCardsList() {
        if (discardTingCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(discardTingCards_);
        } else {
          return discardTingCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public int getDiscardTingCardsCount() {
        if (discardTingCardsBuilder_ == null) {
          return discardTingCards_.size();
        } else {
          return discardTingCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards getDiscardTingCards(int index) {
        if (discardTingCardsBuilder_ == null) {
          return discardTingCards_.get(index);
        } else {
          return discardTingCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder setDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards value) {
        if (discardTingCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.set(index, value);
          onChanged();
        } else {
          discardTingCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder setDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder builderForValue) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          discardTingCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards value) {
        if (discardTingCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(value);
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards value) {
        if (discardTingCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(index, value);
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder builderForValue) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(builderForValue.build());
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addDiscardTingCards(
          int index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder builderForValue) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          discardTingCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder addAllDiscardTingCards(
          java.lang.Iterable<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards> values) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          super.addAll(values, discardTingCards_);
          onChanged();
        } else {
          discardTingCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder clearDiscardTingCards() {
        if (discardTingCardsBuilder_ == null) {
          discardTingCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          discardTingCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public Builder removeDiscardTingCards(int index) {
        if (discardTingCardsBuilder_ == null) {
          ensureDiscardTingCardsIsMutable();
          discardTingCards_.remove(index);
          onChanged();
        } else {
          discardTingCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder getDiscardTingCardsBuilder(
          int index) {
        return getDiscardTingCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder getDiscardTingCardsOrBuilder(
          int index) {
        if (discardTingCardsBuilder_ == null) {
          return discardTingCards_.get(index);  } else {
          return discardTingCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public java.util.List<? extends com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
           getDiscardTingCardsOrBuilderList() {
        if (discardTingCardsBuilder_ != null) {
          return discardTingCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(discardTingCards_);
        }
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder addDiscardTingCardsBuilder() {
        return getDiscardTingCardsFieldBuilder().addBuilder(
            com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder addDiscardTingCardsBuilder(
          int index) {
        return getDiscardTingCardsFieldBuilder().addBuilder(
            index, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.getDefaultInstance());
      }
      /**
       * <code>repeated .mahjong.DiscardTingCards discardTingCards = 3;</code>
       *
       * <pre>
       * 本人打牌后的听牌列表
       * </pre>
       */
      public java.util.List<com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder> 
           getDiscardTingCardsBuilderList() {
        return getDiscardTingCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder> 
          getDiscardTingCardsFieldBuilder() {
        if (discardTingCardsBuilder_ == null) {
          discardTingCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCards.Builder, com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.DiscardTingCardsOrBuilder>(
                  discardTingCards_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          discardTingCards_ = null;
        }
        return discardTingCardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mahjong.SOperCard)
    }

    static {
      defaultInstance = new SOperCard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mahjong.SOperCard)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mahjong_SOperCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mahjong_SOperCard_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027mahjong/SOperCard.proto\022\007mahjong\032\030mahj" +
      "ong/OperDetail.proto\032\036mahjong/DiscardTin" +
      "gCards.proto\"\227\001\n\tSOperCard\022(\n\013operDetail" +
      "s\030\001 \003(\0132\023.mahjong.OperDetail\022+\n\016canOperD" +
      "etails\030\002 \003(\0132\023.mahjong.OperDetail\0223\n\020dis" +
      "cardTingCards\030\003 \003(\0132\031.mahjong.DiscardTin" +
      "gCardsB.\n\037com.kuaikai.game.mahjong.msg.p" +
      "bB\013SOperCardPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mahjong_SOperCard_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mahjong_SOperCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mahjong_SOperCard_descriptor,
              new java.lang.String[] { "OperDetails", "CanOperDetails", "DiscardTingCards", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kuaikai.game.mahjong.msg.pb.OperDetailPB.getDescriptor(),
          com.kuaikai.game.mahjong.msg.pb.DiscardTingCardsPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
